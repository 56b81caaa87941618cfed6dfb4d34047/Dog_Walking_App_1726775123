{
    "component_name": "purple_background_cta_component",
    "id": "purple_background_cta_component_1726775126",
    "type": "containerComponent",
    "metadata": {
        "markdownText": "<template>\n  <div id=\"pong-game\" class=\"max-w-6xl mx-auto px-4 sm:px-6 bg-white\">\n    <canvas id=\"pongCanvas\" width=\"800\" height=\"400\" class=\"border border-purple-500 rounded-lg shadow-lg mx-auto\"></canvas>\n    <div class=\"text-center mt-4 text-lg text-purple-600\">Use W/S keys for left paddle, Up/Down arrow keys for right paddle</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"PongGameComponent\",\n  mounted() {\n    this.initGame();\n  },\n  methods: {\n    initGame() {\n      const canvas = document.getElementById('pongCanvas');\n      const ctx = canvas.getContext('2d');\n      \n      // Game objects\n      const ball = {\n        x: canvas.width / 2,\n        y: canvas.height / 2,\n        radius: 10,\n        speed: 5,\n        dx: 5,\n        dy: 5\n      };\n      \n      const paddleHeight = 100;\n      const paddleWidth = 10;\n      \n      const leftPaddle = {\n        x: 0,\n        y: canvas.height / 2 - paddleHeight / 2,\n        width: paddleWidth,\n        height: paddleHeight,\n        dy: 5\n      };\n      \n      const rightPaddle = {\n        x: canvas.width - paddleWidth,\n        y: canvas.height / 2 - paddleHeight / 2,\n        width: paddleWidth,\n        height: paddleHeight,\n        dy: 5\n      };\n      \n      // Key states\n      const keys = {\n        w: false,\n        s: false,\n        ArrowUp: false,\n        ArrowDown: false\n      };\n      \n      // Event listeners for key presses\n      document.addEventListener('keydown', (e) => {\n        if (e.key in keys) {\n          keys[e.key] = true;\n        }\n      });\n      \n      document.addEventListener('keyup', (e) => {\n        if (e.key in keys) {\n          keys[e.key] = false;\n        }\n      });\n      \n      // Game loop\n      function gameLoop() {\n        update();\n        draw();\n        requestAnimationFrame(gameLoop);\n      }\n      \n      function update() {\n        // Move paddles\n        if (keys.w && leftPaddle.y > 0) {\n          leftPaddle.y -= leftPaddle.dy;\n        }\n        if (keys.s && leftPaddle.y < canvas.height - leftPaddle.height) {\n          leftPaddle.y += leftPaddle.dy;\n        }\n        if (keys.ArrowUp && rightPaddle.y > 0) {\n          rightPaddle.y -= rightPaddle.dy;\n        }\n        if (keys.ArrowDown && rightPaddle.y < canvas.height - rightPaddle.height) {\n          rightPaddle.y += rightPaddle.dy;\n        }\n        \n        // Move ball\n        ball.x += ball.dx;\n        ball.y += ball.dy;\n        \n        // Ball collision with top and bottom walls\n        if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0) {\n          ball.dy *= -1;\n        }\n        \n        // Ball collision with paddles\n        if (\n          (ball.x - ball.radius < leftPaddle.x + leftPaddle.width && ball.y > leftPaddle.y && ball.y < leftPaddle.y + leftPaddle.height) ||\n          (ball.x + ball.radius > rightPaddle.x && ball.y > rightPaddle.y && ball.y < rightPaddle.y + rightPaddle.height)\n        ) {\n          ball.dx *= -1;\n        }\n        \n        // Reset ball if it goes out of bounds\n        if (ball.x + ball.radius > canvas.width || ball.x - ball.radius < 0) {\n          ball.x = canvas.width / 2;\n          ball.y = canvas.height / 2;\n        }\n      }\n      \n      function draw() {\n        // Clear canvas\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        \n        // Draw paddles\n        ctx.fillStyle = '#A855F7';\n        ctx.fillRect(leftPaddle.x, leftPaddle.y, leftPaddle.width, leftPaddle.height);\n        ctx.fillRect(rightPaddle.x, rightPaddle.y, rightPaddle.width, rightPaddle.height);\n        \n        // Draw ball\n        ctx.beginPath();\n        ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n        ctx.fillStyle = '#A855F7';\n        ctx.fill();\n        ctx.closePath();\n      }\n      \n      // Start the game loop\n      gameLoop();\n    }\n  }\n};\n</script>\n"
    },
    "w": 12,
    "h": 17,
    "x": 0,
    "y": 8,
    "i": "1",
    "minW": 3,
    "maxW": 12,
    "minH": 1,
    "moved": false,
    "static": false,
    "isDraggable": true,
    "isResizable": true,
    "name": ""
}